/********************************************************************
* *    *         *           *****          ******
* *   *         * *          *    *           **
* ***          *****         *****            **
* *   *       *     *        *    *           **
* *    *     *       *       *****          ******
* ${FILE_NAME}
* Generated by kabi framework generator.py
* Do not edit 
********************************************************************/
#include <memory>
#include <google/protobuf/service.h>
#include "include/log.h"
#include "net/tcp/net_addr.h"
#include "net/tcp/tcp_server.h"
#include "order.pb.h"
#include "net/rpc/rpc_dispatcher.h"

int main(int argc, char* argv[])
{
    if(argc != 2)
    {
        printf("start ${PROJECT_NAME} error, argc not 2 \n");
        printf("Start like this: \n");
        printf("./${PROJECT_NAME} ../../../kabi.xml \n");
        return 0;
    }
    //std::string xmlfile = "/mnt/hgfs/Share/Kabi/kabi.xml";
    kabi::config::set_global_config(argv[1]);
    kabi::logger::init_global_logger();
    std::shared_ptr<${SERVICE_NAME}> order_ptr = std::make_shared<${SERVICE_NAME}>();
    kabi::rpcDispatcher::get_rpc_dispatcher()->register_service(order_ptr);
    kabi::ipNetAddr::s_ptr addr = std::make_shared<kabi::ipNetAddr>("192.168.247.128", kabi::config::get_global_config()->m_port);
    kabi::tcpServer tcp_server(addr);
    tcp_server.start();
    return 0;
}